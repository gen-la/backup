@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<section class="hero d-flex align-items-center bg-black">
    <canvas id="fireworksCanvas"></canvas>
    <div class="position-relative z-1 text-center text-white w-100">
        <div class="row justify-content-center mx-0">
            <div class="col-lg-8">
                <h1 class="display-1">Welcome to CyberGames</h1>
                <p class="lead mb-5">Creating exceptional web experiences that spark innovation and drive success. Let's bring your digital vision to life.</p>
                <a href="#services" class="btn btn-primary btn-lg px-4 me-3">Discover More</a>
                <a href="#contact" class="btn btn-outline-light btn-lg px-4">Get Started</a>
            </div>
        </div>
    </div>
</section>
    <script>
                (function() {
                    const canvas = document.getElementById('fireworksCanvas');
                    const ctx = canvas.getContext('2d');

                    function resizeCanvas() {
                        canvas.width = canvas.offsetWidth;
                        canvas.height = canvas.offsetHeight;
                    }
                    
                    resizeCanvas();
                    window.addEventListener('resize', resizeCanvas);

                    const particles = [];
                    const fireworks = [];

                    class Firework {
                        constructor() {
                            this.x = Math.random() * canvas.width;
                            this.y = canvas.height;
                            this.targetY = Math.random() * (canvas.height * 0.5);
                            this.speed = 3;
                            this.color = `hsl(${Math.random() * 360}, 100%, 50%)`;
                        }

                        update() {
                            this.y -= this.speed;
                            return this.y > this.targetY;
                        }

                        draw() {
                            ctx.fillStyle = this.color;
                            ctx.beginPath();
                            ctx.arc(this.x, this.y, 2, 0, Math.PI * 2);
                            ctx.fill();
                        }

                        explode() {
                            for (let i = 0; i < 50; i++) {
                                particles.push(new Particle(this.x, this.y, this.color));
                            }
                        }
                    }

                    class Particle {
                        constructor(x, y, color) {
                            this.x = x;
                            this.y = y;
                            this.color = color;
                            const angle = Math.random() * Math.PI * 2;
                            const speed = Math.random() * 5 + 2;
                            this.velX = Math.cos(angle) * speed;
                            this.velY = Math.sin(angle) * speed;
                            this.life = 1;
                        }

                        update() {
                            this.x += this.velX;
                            this.y += this.velY;
                            this.velY += 0.1;
                            this.life -= 0.02;
                            return this.life > 0;
                        }

                        draw() {
                            ctx.fillStyle = this.color;
                            ctx.globalAlpha = this.life;
                            ctx.beginPath();
                            ctx.arc(this.x, this.y, 1, 0, Math.PI * 2);
                            ctx.fill();
                        }
                    }

                    function animate() {
                        ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';
                        ctx.fillRect(0, 0, canvas.width, canvas.height);

                        if (Math.random() < 0.05) {
                            fireworks.push(new Firework());
                        }

                        for (let i = fireworks.length - 1; i >= 0; i--) {
                            if (!fireworks[i].update()) {
                                fireworks[i].explode();
                                fireworks.splice(i, 1);
                            } else {
                                fireworks[i].draw();
                            }
                        }

                        for (let i = particles.length - 1; i >= 0; i--) {
                            if (!particles[i].update()) {
                                particles.splice(i, 1);
                            } else {
                                particles[i].draw();
                            }
                        }

                        ctx.globalAlpha = 1;
                        requestAnimationFrame(animate);
                    }
                    animate();
                })();
            </script>





 
  